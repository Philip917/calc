{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["regNum","regNot","App","props","state","lastPressed","keysPressed","totalEq","lastEq","lastButton","bind","arithKeys","allClear","dispKey","equals","addEq","e","y","this","setState","n","evaluate","toString","test","x","target","innerText","console","log","includes","id","className","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c5d8d6a.chunk.js","sourcesContent":["import React from 'react';\nimport {evaluate} from 'mathjs';\nimport './App.css';\n\nconst regNum = /[0-9.]/;\nconst regNot = /[^0-9.]/;\n\nclass App extends React.Component {\nconstructor(props) {\nsuper(props);\nthis.state = {\n  lastPressed: \"\",\n  keysPressed: \"0\",\n  totalEq: \"0\",\n  lastEq: \"\"\n};\nthis.lastButton = this.lastButton.bind(this);\nthis.arithKeys = this.arithKeys.bind(this);\nthis.allClear = this.allClear.bind(this);\nthis.dispKey = this.dispKey.bind(this);\nthis.equals = this.equals.bind(this);\nthis.addEq = this.addEq.bind(this);\n}\nlastButton(e) {\nvar y = e;\n\nthis.setState({\n  lastPressed: y\n});\n}\naddEq(e) {\nif (this.state.totalEq === \"0\") {\n  this.setState({\n    totalEq: this.state.keysPressed,\n    keysPressed:e\n  });\n} else if(this.state.keysPressed===\"0\"){\n  this.setState({\n    totalEq: this.state.totalEq,\n    keysPressed: e\n  })\n} \n\nelse {\n  this.setState({\n    totalEq: this.state.totalEq + this.state.keysPressed,\n    keysPressed:e\n    \n  });\n}\n}\nequals() {\nlet num = evaluate(this.state.totalEq+this.state.keysPressed);\nlet n = num.toString();\nthis.setState({\n  keysPressed: n,\n  totalEq: \"0\"\n  \n});\n}\ndispKey(e) {\n  if(this.state.keysPressed!==\"0\" && regNum.test(e) ||e===\".\"){\n     this.setState({\n    keysPressed:  this.state.keysPressed + e\n     }); }\n  else \n  {this.setState({\n    keysPressed: e\n  });}\n}\n\nallClear() {\nthis.setState({\n  lastPressed: \"\",\n  keysPressed: \"0\",\n  totalEq: \"0\"\n});\n}\narithKeys(e) {\nconst x = e.target.innerText;\nconst xNum =  this.state.keysPressed;\nconsole.log(x)\n\n \n\nif (x == \"=\") {\n  \n  this.equals();\n} else if (x == \"AC\") {\n  this.allClear();\n} else if(this.state.keysPressed.includes(\".\") && x ==\".\"){ \n\n}\n\nelse{\n  if ( regNum.test(x) && regNum.test(this.state.keysPressed) || this.state.keysPressed ==\"-\" ) {\n    this.dispKey(x);\n    \n  }\n  \n  else if( regNot.test(x) && regNot.test(this.state.keysPressed)){\n    if(x==\"-\"||regNum.test(this.state.keysPressed))\n    {this.setState({\n      keysPressed: this.state.keysPressed + x\n    });}\n    else{\n      this.setState({\n      keysPressed:  x});\n    }\n    \n  }\n  else {\n    this.addEq(x);\n   \n  \n  }\n}\n}\n\nrender() {\n\nreturn (\n  <div id=\"overAll\" className=\"container\">\n    <div id=\"inner\" className=\"container row\" >\n      <div id=\"display\" className=\"whole-row \">\n        <p className=\"dispKey\">{this.state.totalEq}</p>\n        <p className=\"dispKey\">{this.state.keysPressed}</p>\n      </div>\n      <div id=\"buttons\" className=\"container row\" >\n        <div id=\"one\" className=\"one-block \" onClick={this.arithKeys}>\n          <p id=\"one\">1</p>\n        </div>\n        <div id=\"two\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>2</p>\n        </div>\n        <div id=\"three\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>3</p>\n        </div>\n        <div id=\"clear\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>AC</p>\n        </div>\n        <div id=\"four\" className=\"one-block\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>4</p>\n        </div>\n        <div id=\"five\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>5</p>\n        </div>\n        <div id=\"six\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>6</p>\n        </div>\n        <div id=\"add\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>+</p>\n        </div>\n        <div id=\"seven\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>7</p>\n        </div>\n        <div id=\"eight\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>8</p>\n        </div>\n        <div id=\"nine\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>9</p>\n        </div>\n        <div id=\"subtract\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>-</p>\n        </div>\n        <div id=\"decimal\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>.</p>\n        </div>\n        <div id=\"zero\" className=\"one-block num\" onClick={this.arithKeys}>\n          <p>0</p>\n        </div>\n        <div id=\"multiply\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>*</p>\n        </div>\n        <div id=\"divide\" className=\"one-block\" onClick={this.arithKeys}>\n          <p>/</p>\n        </div>\n        <div id=\"equals\" className=\"whole-row\" onClick={this.arithKeys}>\n          <p>=</p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}